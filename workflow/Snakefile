# Import packages
import os
from astropy.io import fits
from astropy.table import Table,vstack

# Run getCluster on startup
os.system(f'workflow/scripts/getClusters.py --download')
with open('CLUSTERS/clusters.txt') as f: CLUSTERS = f.read().splitlines()

# Final Rule
rule all:
    input:
        expand('CLUSTERS/{cluster}/logs/contam.out',cluster=CLUSTERS)

# Stage1 Rule
rule runStage1:
    input:
        [f'UNCAL/{f}' for f in vstack([Table.read('CLUSTERS/cluster-prods.fits',c) for c in CLUSTERS])['productFilename'].tolist()]
    output:
        [f'RATE/{f}'.replace('uncal','rate') for f in vstack([Table.read('CLUSTERS/cluster-prods.fits',c) for c in CLUSTERS])['productFilename'].tolist()]
    conda:'envs/jwst.yaml'
    log:'logs/Stage1.log'
    resources:
        mem_mb=2048000,
        slurm_partition='p.huge'
    shell:
        """
        module load texlive/2021
        ./workflow/scripts/runStage1.py --ncpu $SLURM_CPUS_PER_TASK'
        """

# Preprocess Rule
rule preProcess:
    input:
        [f'RATE/{f}'.replace('uncal','rate') for f in vstack([Table.read('CLUSTERS/cluster-prods.fits',c) for c in CLUSTERS])['productFilename'].tolist()]
    output:
        'CLUSTERS/{cluster}/logs/proc.out'
    conda:'envs/grizli.yaml'
    log:'logs/PreProcess_{cluster}.log'
    shell:
        """
        module load texlive/2021
        ./workflow/scripts/preprocess.py {wildcards.cluster}'
        """

# Mosaic Rule
rule mosaic:
    input:
        'CLUSTERS/{cluster}/logs/proc.out'
    output:
        'CLUSTERS/{cluster}/logs/mos.out'
    conda:'envs/grizli.yaml'
    log:'logs/Mosaic_{cluster}.log'
    shell:
        """
        module load texlive/2021
        ./workflow/scripts/preprocess.py {wildcards.cluster}
        """

# Contamination Rule
rule contam:
    input:
        'CLUSTERS/{cluster}/logs/mos.out'
    output:
        'CLUSTERS/{cluster}/logs/contam.out'
    conda:'envs/grizli.yaml'
    log:'logs/Contam_{cluster}.log'
    shell:
        """
        module load texlive/2021
        ./workflow/scripts/preprocess.py {wildcards.cluster} --ncpu $SLURM_CPUS_PER_TASK
        """

# Extraction Rule
rule extract:
    input:
        'CLUSTERS/{cluster}/logs/contam.out'
    output:
        'CLUSTERS/{cluster}/logs/extr.out'
    conda:'envs/grizli.yaml'
    log:'logs/Extract_{cluster}.log'
    shell:
        """
        module load texlive/2021
        ./workflow/scripts/preprocess.py {wildcards.cluster} --ncpu $SLURM_CPUS_PER_TASK
        """

# Fitting Rule
rule zfit:
    input:
        'CLUSTERS/{cluster}/logs/extr.out'
    output:
        'CLUSTERS/{cluster}/logs/zfit.out'
    conda:'envs/grizli.yaml'
    log:'logs/Redshift_{cluster}.log'
    shell:
        """
        module load texlive/2021
        ./workflow/scripts/preprocess.py {wildcards.cluster} --ncpu $SLURM_CPUS_PER_TASK
        """

